// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ImoutoRebirth.Lilin.WebApi.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TagCreateRequest
    {
        /// <summary>
        /// Initializes a new instance of the TagCreateRequest class.
        /// </summary>
        public TagCreateRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TagCreateRequest class.
        /// </summary>
        public TagCreateRequest(System.Guid typeId, string name, bool hasValue, IList<string> synonyms = default(IList<string>))
        {
            TypeId = typeId;
            Name = name;
            HasValue = hasValue;
            Synonyms = synonyms;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "typeId")]
        public System.Guid TypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasValue")]
        public bool HasValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "synonyms")]
        public IList<string> Synonyms { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
