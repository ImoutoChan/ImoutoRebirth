// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ImoutoRebirth.Lilin.WebApi.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class FileTagResponse
    {
        /// <summary>
        /// Initializes a new instance of the FileTagResponse class.
        /// </summary>
        public FileTagResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FileTagResponse class.
        /// </summary>
        /// <param name="source">Possible values include: 'Yandere',
        /// 'Danbooru', 'Sankaku', 'Manual'</param>
        public FileTagResponse(System.Guid fileId, MetadataSource source, FileTagResponseTag tag = default(FileTagResponseTag), string value = default(string))
        {
            FileId = fileId;
            Tag = tag;
            Value = value;
            Source = source;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileId")]
        public System.Guid FileId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tag")]
        public FileTagResponseTag Tag { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Yandere', 'Danbooru', 'Sankaku',
        /// 'Manual'
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public MetadataSource Source { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Tag != null)
            {
                Tag.Validate();
            }
        }
    }
}
