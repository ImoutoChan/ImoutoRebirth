// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ImoutoRebirth.Lilin.WebApi.Client.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for MetadataSource.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum MetadataSource
    {
        [EnumMember(Value = "Yandere")]
        Yandere,
        [EnumMember(Value = "Danbooru")]
        Danbooru,
        [EnumMember(Value = "Sankaku")]
        Sankaku,
        [EnumMember(Value = "Manual")]
        Manual
    }
    internal static class MetadataSourceEnumExtension
    {
        internal static string ToSerializedValue(this MetadataSource? value)
        {
            return value == null ? null : ((MetadataSource)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this MetadataSource value)
        {
            switch( value )
            {
                case MetadataSource.Yandere:
                    return "Yandere";
                case MetadataSource.Danbooru:
                    return "Danbooru";
                case MetadataSource.Sankaku:
                    return "Sankaku";
                case MetadataSource.Manual:
                    return "Manual";
            }
            return null;
        }

        internal static MetadataSource? ParseMetadataSource(this string value)
        {
            switch( value )
            {
                case "Yandere":
                    return MetadataSource.Yandere;
                case "Danbooru":
                    return MetadataSource.Danbooru;
                case "Sankaku":
                    return MetadataSource.Sankaku;
                case "Manual":
                    return MetadataSource.Manual;
            }
            return null;
        }
    }
}
