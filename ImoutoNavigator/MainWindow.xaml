<metroControl:MetroWindow x:Class="ImoutoNavigator.MainWindow"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                          xmlns:metroControl="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                          xmlns:viewModel="clr-namespace:ImoutoNavigator.ViewModel"
                          xmlns:userControl="clr-namespace:ImoutoNavigator.UserControls"
                          xmlns:converter="clr-namespace:ImoutoNavigator.Converters"
                          d:DataContext="{d:DesignInstance viewModel:MainWindowVM, IsDesignTimeCreatable=False}"
                          mc:Ignorable="d"
                          WindowStartupLocation="CenterScreen"
                          BorderBrush="{DynamicResource AccentColorBrush}"                  
                          BorderThickness="2"
                          Height="350" 
                          Width="525"
                          ShowWindowCommandsOnTop="False"
                          TitleCaps="False"
                          Title="{Binding Title}">
    <metroControl:MetroWindow.Resources>
        <converter:VisibilityConverter x:Key="VisibilityConverter" />

        <converter:VisibilityConverter x:Key="VisibilityInvertConverter" 
                                       IsInvert="True" />
    </metroControl:MetroWindow.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="200" />
        </Grid.ColumnDefinitions>

        <ListBox x:Name="ListBoxElement"
                 Grid.Row="0"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemsSource="{Binding Path=ImageList, UpdateSourceTrigger=PropertyChanged}"
                 SelectionMode="Extended"
                 >
            <ListBox.InputBindings>
                <MouseBinding Command="{Binding Path=ZoomOutCommand}" 
                              Gesture="{x:Static userControl:MouseWheelGesture.CtrlDown}" />

                <MouseBinding Command="{Binding Path=ZoomInCommand}"
                              Gesture="{x:Static userControl:MouseWheelGesture.CtrlUp}" />
            </ListBox.InputBindings>
            
            <ListBox.Template>
                <ControlTemplate TargetType="ListBox">
                    <userControl:ExtScrollViewer x:Name="ScrollViewer"
                                                 Padding="{TemplateBinding Padding}"
                                                 Background="{TemplateBinding Background}"
                                                 BorderBrush="Transparent"
                                                 BorderThickness="0">
                        <ItemsPresenter />
                    </userControl:ExtScrollViewer>
                </ControlTemplate>
            </ListBox.Template>
            
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="SnapsToDevicePixels"
                            Value="True" />
                    <Setter Property="Padding"
                            Value="4,1" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="{Binding HorizontalContentAlignment,
                                            RelativeSource={RelativeSource FindAncestor,
                                                                           AncestorLevel=1,
                                                                           AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment"
                            Value="{Binding VerticalContentAlignment,
                                            RelativeSource={RelativeSource FindAncestor,
                                                                           AncestorLevel=1,
                                                                           AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Background"
                            Value="Transparent" />
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                    <Setter Property="FontSize"
                            Value="16" />
                    <Setter Property="Foreground"
                            Value="#999999" />
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2"
                                                       SnapsToDevicePixels="True"
                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                       StrokeDashArray="1 2"
                                                       StrokeThickness="1" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True"
                                        Margin="2">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver"
                                                       Value="True" />
                                        </MultiTrigger.Conditions>
                                        
                                        <Setter TargetName="Bd"
                                                Property="Background"
                                                Value="{DynamicResource AccentColorBrush4}" />
                                        
                                        <Setter TargetName="Bd"
                                                Property="BorderBrush"
                                                Value="{DynamicResource AccentColorBrush2}" />
                                    </MultiTrigger>
                                    
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive"
                                                       Value="False" />
                                            
                                            <Condition Property="IsSelected"
                                                       Value="True" />
                                        </MultiTrigger.Conditions>
                                        
                                        <Setter TargetName="Bd"
                                                Property="Background"
                                                Value="{DynamicResource AccentColorBrush3}" />
                                        
                                        <Setter TargetName="Bd"
                                                Property="BorderBrush"
                                                Value="{DynamicResource AccentColorBrush}" />
                                    </MultiTrigger>
                                    
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive"
                                                       Value="True" />
                                            
                                            <Condition Property="IsSelected"
                                                       Value="True" />
                                        </MultiTrigger.Conditions>
                                        
                                        <Setter TargetName="Bd"
                                                Property="Background"
                                                Value="{DynamicResource AccentColorBrush3}" />
                                        
                                        <Setter TargetName="Bd"
                                                Property="BorderBrush"
                                                Value="{DynamicResource AccentColorBrush}" />
                                    </MultiTrigger>
                                    
                                    <Trigger Property="IsEnabled"
                                             Value="False">
                                        <Setter TargetName="Bd"
                                                Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <userControl:VirtualizingWrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border Margin="6,10,10,10">
                        <Border.Effect>
                            <DropShadowEffect/>
                        </Border.Effect>
                        
                        <Grid Width="{Binding Path=ViewPortSize.Width}"
                              Height="{Binding Path=ViewPortSize.Height}">
                            <Image Source="{Binding Path=Image}" 
                                   Visibility="{Binding Path=IsLoading, 
                                                        Converter={StaticResource VisibilityInvertConverter}}"/>

                            <Ellipse Width="10" 
                                     Height="10"
                                     Fill="{DynamicResource GrayBrush10}"
                                     Visibility="{Binding Path=IsLoading, 
                                                          Converter={StaticResource VisibilityConverter}}" />
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ListBox Grid.Row="0"
                     ItemsSource="{Binding Path=TODO}"
                     SelectedIndex="0">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding Path=TODO}"
                                  Margin="5"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <TextBox Grid.Row="1" 
                     Margin="5"
                     metroControl:TextboxHelper.Watermark="Search tag"
                     metroControl:TextboxHelper.ButtonCommand="{Binding Path=TODO}"
                     Style="{DynamicResource SearchMetroTextBox}" />
            
            <ListBox Grid.Row="2"
                     ItemsSource="{Binding Path=TODO}"
                     SelectedIndex="0">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding Path=TODO}"
                                  Margin="5"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</metroControl:MetroWindow>
