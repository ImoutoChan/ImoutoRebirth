// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ImoutoRebirth.Room.WebApi.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class DestinationFolderCreateRequest
    {
        /// <summary>
        /// Initializes a new instance of the DestinationFolderCreateRequest
        /// class.
        /// </summary>
        public DestinationFolderCreateRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DestinationFolderCreateRequest
        /// class.
        /// </summary>
        public DestinationFolderCreateRequest(string path, bool shouldCreateSubfoldersByHash, bool shouldRenameByHash, string formatErrorSubfolder, string hashErrorSubfolder, string withoutHashErrorSubfolder)
        {
            Path = path;
            ShouldCreateSubfoldersByHash = shouldCreateSubfoldersByHash;
            ShouldRenameByHash = shouldRenameByHash;
            FormatErrorSubfolder = formatErrorSubfolder;
            HashErrorSubfolder = hashErrorSubfolder;
            WithoutHashErrorSubfolder = withoutHashErrorSubfolder;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shouldCreateSubfoldersByHash")]
        public bool ShouldCreateSubfoldersByHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shouldRenameByHash")]
        public bool ShouldRenameByHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "formatErrorSubfolder")]
        public string FormatErrorSubfolder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hashErrorSubfolder")]
        public string HashErrorSubfolder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "withoutHashErrorSubfolder")]
        public string WithoutHashErrorSubfolder { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
            if (FormatErrorSubfolder == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FormatErrorSubfolder");
            }
            if (HashErrorSubfolder == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "HashErrorSubfolder");
            }
            if (WithoutHashErrorSubfolder == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "WithoutHashErrorSubfolder");
            }
        }
    }
}
