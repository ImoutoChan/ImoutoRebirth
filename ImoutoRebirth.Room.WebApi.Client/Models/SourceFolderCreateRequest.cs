// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ImoutoRebirth.Room.WebApi.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SourceFolderCreateRequest
    {
        /// <summary>
        /// Initializes a new instance of the SourceFolderCreateRequest class.
        /// </summary>
        public SourceFolderCreateRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SourceFolderCreateRequest class.
        /// </summary>
        public SourceFolderCreateRequest(string path, bool shouldCheckFormat, bool shouldCheckHashFromName, bool shouldCreateTagsFromSubfolders, bool shouldAddTagFromFilename, IList<string> supportedExtensions = default(IList<string>))
        {
            Path = path;
            ShouldCheckFormat = shouldCheckFormat;
            ShouldCheckHashFromName = shouldCheckHashFromName;
            ShouldCreateTagsFromSubfolders = shouldCreateTagsFromSubfolders;
            ShouldAddTagFromFilename = shouldAddTagFromFilename;
            SupportedExtensions = supportedExtensions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shouldCheckFormat")]
        public bool ShouldCheckFormat { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shouldCheckHashFromName")]
        public bool ShouldCheckHashFromName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shouldCreateTagsFromSubfolders")]
        public bool ShouldCreateTagsFromSubfolders { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shouldAddTagFromFilename")]
        public bool ShouldAddTagFromFilename { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supportedExtensions")]
        public IList<string> SupportedExtensions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
        }
    }
}
