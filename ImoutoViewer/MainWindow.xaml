<Controls:MetroWindow x:Class="ImoutoViewer.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:local="clr-namespace:ImoutoViewer"
                      xmlns:localControls="clr-namespace:ImoutoViewer.UserControls"
                      xmlns:behavior="clr-namespace:ImoutoViewer.Behavior"                      
                      xmlns:Converters="clr-namespace:ImoutoViewer.Converters"
                      xmlns:gif="http://wpfanimatedgif.codeplex.com"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      Title="{Binding Path=Title}"
                      BorderBrush="{DynamicResource AccentColorBrush}"                      
                      BorderThickness="2"
                      Height="350" 
                      Width="525"
                      WindowStartupLocation="CenterScreen" 
                      WindowState="Maximized"
                      ShowWindowCommandsOnTop="False"
                      gif:ImageBehavior.AnimateInDesignMode="True"
                      KeyUp="MainWindow_OnKeyUp" >
    <Controls:MetroWindow.InputBindings>
        <MouseBinding Command="{Binding SimpleNextImageCommand}" 
                      Gesture="{x:Static localControls:MouseWheelGesture.Down}" />
        <MouseBinding Command="{Binding SimplePrevImageCommand}"
                      Gesture="{x:Static localControls:MouseWheelGesture.Up}" />
        <MouseBinding Command="{Binding NextImageCommand}" 
                      Gesture="{x:Static localControls:MouseWheelGesture.ShiftDown}" />
        <MouseBinding Command="{Binding PrevImageCommand}"
                      Gesture="{x:Static localControls:MouseWheelGesture.ShiftUp}" />
        <MouseBinding Command="{Binding ZoomOutCommand}" 
                      Gesture="{x:Static localControls:MouseWheelGesture.CtrlDown}" />
        <MouseBinding Command="{Binding ZoomInCommand}"
                      Gesture="{x:Static localControls:MouseWheelGesture.CtrlUp}" />
        <KeyBinding Command="{Binding RotateCommand}" 
                    CommandParameter="left"
                    Key="L" />
        <KeyBinding Command="{Binding RotateCommand}" 
                    CommandParameter="right"
                    Key="R" />
        <KeyBinding Command="{Binding NextFolderCommand}"
                    Key="Down"/>
        <KeyBinding Command="{Binding PrevFolderCommand}"
                    Key="Up"/>
    </Controls:MetroWindow.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonUp">
            <i:InvokeCommandAction Command="{Binding NextImageCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseRightButtonUp">
            <i:InvokeCommandAction Command="{Binding PrevImageCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Controls:MetroWindow.WindowCommands>
        <Controls:WindowCommands>
            <Button Content="SETTINGS" 
                    Click="Button_Click"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.WindowCommands>
    <i:Interaction.Behaviors>
        <behavior:FrameworkElementDropBehavior />
        <Behaviours:BorderlessWindowBehavior />
    </i:Interaction.Behaviors>
    <Controls:MetroWindow.Resources>
        <Converters:VisibilityConverter x:Key="visibilityConverter" />
        <Converters:VisibilityConverter x:Key="visibilityInvertConverter" 
                                        IsInvert="True" />
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="SettingFlyout" 
                             Width="250" 
                             Header="Settings" 
                             Position="Right"
                             DataContext="{Binding Path=Settings}"
                             MouseLeftButtonUp="SettingFlyout_MouseLeftButtonUp" >
                <Grid Margin="20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ScrollViewer Grid.Row="1" 
                                  VerticalScrollBarVisibility="Auto">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Resize" 
                                       Margin="0,0,0,5"/>
                            <ComboBox ItemsSource="{Binding Path=ResizeTypes}"
                                      SelectedItem="{Binding Path=SelectedResizeType}" />
                            
                            <TextBlock Text="Folders loading" 
                                       Margin="0,15,0,5" />
                            <ItemsControl ItemsSource="{Binding Path=DirectorySearchTypes}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ToggleButton Margin="0,0,11,5"
                                                      Content="{Binding Name}" 
                                                      IsChecked="{Binding IsSelected}"
                                                      Style="{DynamicResource CustomMetroToggleButton}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            
                            <TextBlock Text="Files sorting" 
                                       Margin="0,15,0,5" />
                            <ComboBox ItemsSource="{Binding Path=SortingMethods}"
                                      SelectedItem="{Binding Path=SelectedFilesSorting}" 
                                      Margin="0,0,0,10"/>
                            <CheckBox IsChecked="{Binding Path=IsSelectedFilesSortingDescending}"
                                      Content="Descending" FlowDirection="RightToLeft"/>
                            
                            <TextBlock Text="Folders sorting" 
                                       Margin="0,15,0,5" />
                            <ComboBox ItemsSource="{Binding Path=SortingMethods}"
                                      SelectedItem="{Binding Path=SelectedFoldersSorting}" 
                                      Margin="0,0,0,10"/>
                            <CheckBox IsChecked="{Binding Path=IsSelectedFoldersSortingDescending}"
                                      Content="Descending" FlowDirection="RightToLeft"/>
                            
                            <TextBlock Text="Theme"
                                       Margin="0,15,0,5" />
                            <ComboBox ItemsSource="{Binding AccentColors, Mode=OneWay}"
                                      SelectedItem="{Binding SelectedAccentColor, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Ellipse Grid.Column="0"
                                                     Width="16"
                                                     Height="16"
                                                     Fill="{Binding ColorBrush, Mode=OneWay}"/>
                                            <Label Grid.Column="1"
                                                   Content="{Binding Name, Mode=OneWay}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Grid Focusable="True" 
		  MouseLeftButtonUp="Client_MouseLeftButtonUp">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Grid x:Name="Client">
            <localControls:ExtScrollViewer x:Name="ScrollViewerObject" 
    			HorizontalScrollBarVisibility="Auto" 
    			VerticalScrollBarVisibility="Auto"
    			ScrollChanged="ScrollViewerObject_ScrollChanged"
    			Focusable="False"
    			Grid.Row ="0">
                <Grid>
                    <Image x:Name="AnimutedViewPort"
    					VerticalAlignment="Center"
    					HorizontalAlignment="Center"
    					Height="{Binding ViewportHeight}"
    					Width="{Binding ViewportWidth}"
    					gif:ImageBehavior.AnimatedSource="{Binding AnimutedImage}"
    					Visibility="{Binding IsAnimuted, Converter={StaticResource visibilityConverter}}" >
                        <i:Interaction.Behaviors>
                            <behavior:FrameworkElementDragBehavior />
                        </i:Interaction.Behaviors>
                    </Image>
                    <Image x:Name="ViewPort"
    					VerticalAlignment="Center"
    					HorizontalAlignment="Center"
    					Height="{Binding ViewportHeight}"
    					Width="{Binding ViewportWidth}"
    					Source="{Binding Image}"                     
    					Visibility="{Binding IsAnimuted, Converter={StaticResource visibilityInvertConverter}}" >
                        <i:Interaction.Behaviors>
                            <behavior:FrameworkElementDragBehavior />
                        </i:Interaction.Behaviors>
                    </Image>
                    <Controls:ProgressRing IsActive="{Binding IsLoading}" />
                    <Label HorizontalAlignment="Stretch"                       
    					VerticalAlignment="Stretch"
    					HorizontalContentAlignment="Center"
    					VerticalContentAlignment="Center"
    					Content="{Binding ErrorMessage}"
    					Visibility="{Binding IsError, Converter={StaticResource visibilityConverter}}" />
                </Grid>
            </localControls:ExtScrollViewer>
        </Grid>
        <StatusBar x:Name="WideStatusBar" 
			Background="{Binding StatusBar.Background}" 
			Width="0"
            Grid.Row="1">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Foreground="{Binding StatusBar.Foreground, UpdateSourceTrigger=PropertyChanged}" 
					Text="{Binding StatusBar.Text, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="5" 
				Visibility="{Binding StatusBar.CharPosition}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Foreground="{Binding StatusBar.Foreground, UpdateSourceTrigger=PropertyChanged}" 
						Text="Ch " />
                    <TextBlock Foreground="{Binding StatusBar.Foreground, UpdateSourceTrigger=PropertyChanged}" 
						Text="{Binding StatusBar.CharPosition, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Controls:MetroWindow>
